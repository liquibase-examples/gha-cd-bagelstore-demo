template:
  name: Custom Deployment
  identifier: Custom
  versionLabel: "1.0"
  type: CustomDeployment
  projectIdentifier: bagel_store_demo
  orgIdentifier: default
  tags:
    purpose: minimal_placeholder
    managed_by: git
  description: |
    Minimal deployment template for CustomDeployment infrastructure validation.

    This template exists to satisfy Harness validation requirements that
    CustomDeployment infrastructure definitions must reference a deployment template.

    Actual deployment logic is in the Step Group Template:
    - Template: Coordinated_DB_App_Deployment (v1.0)
    - Location: .harness/orgs/default/projects/bagel_store_demo/templates/Coordinated_DB_App_Deployment/v1_0.yaml
    - Contains: Fetch artifacts, database update, app deployment, health check, fetch instances

    This template provides only:
    - Empty infrastructure variables (variables come from Environment Variables)
    - Minimal FetchInstanceScript placeholder (real script in Step Group Template)

    Pattern: Minimal deployment template + Step Group Template with actual logic
    Rationale: Satisfies Harness validation while keeping deployment logic centralized

  spec:
    infrastructure:
      # Infrastructure variables passed from Pipeline → Infrastructure Definition → FetchInstanceScript
      # Values come from Harness Environment Variables (populated by Terraform)
      variables:
        - name: environment
          type: String
          value: <+env.variables.environment>
          description: "Target environment (dev/test/staging/prod)"

        - name: deployment_target
          type: String
          value: <+env.variables.DEPLOYMENT_TARGET>
          description: "Deployment mode: aws or local"

        - name: service_name
          type: String
          value: <+env.variables.app_runner_service_name>
          description: "App Runner service name"

        - name: service_url
          type: String
          value: <+env.variables.app_runner_service_url>
          description: "App Runner service URL"

      # FetchInstanceScript - Calls mounted script with infrastructure variables
      # Script location: /opt/harness-delegate/scripts/fetch-instances.sh (mounted from harness/scripts/)
      fetchInstancesScript:
        store:
          type: Inline
          spec:
            content: |
              #!/bin/bash
              # Call the actual fetch-instances.sh script with infrastructure variables
              # Variables are available as: <+infra.variables.name>

              /opt/harness-delegate/scripts/fetch-instances.sh \
                "<+infra.variables.environment>" \
                "<+infra.variables.deployment_target>" \
                "<+infra.variables.service_name>" \
                "<+infra.variables.service_url>"

      # Instance attributes mapping (required by Harness)
      # CRITICAL: "instancename" is MANDATORY field name (cannot use "hostname" or other names)
      instanceAttributes:
        - name: instancename
          jsonPath: instance
          description: ""

      # JSON path to instances array in script output (required)
      instancesListPath: instances

    # Execution section (required for CustomDeployment templates)
    # Empty because actual deployment steps are in Step Group Template
    execution:
      stepTemplateRefs: []
